name: 🧪 Run Tests and Publish Reports

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * *' # Ejecución diaria a las 6 AM UTC
  workflow_dispatch:

jobs:
  test-and-publish:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
    - name: 📂 Checkout repository
      uses: actions/checkout@v4

    - name: ⚙️ Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🎭 Install Playwright browsers
      run: npx playwright install

    - name: 🧪 Run tests
      run: npx playwright test --reporter=html,json
      env:
        API_BASE_URL: ${{ secrets.API_BASE_URL }}
        API_TOKEN: ${{ secrets.API_TOKEN }}

    - name: 📁 Verify test reports generated
      run: |
        echo "📁 Checking report directory..."
        ls -la playwright-report/
        echo "📊 Checking test-results directory..."
        ls -la test-results/
        echo "✅ Verification completed"
        echo "📈 Report files found:"
        find playwright-report -name "*.html" -o -name "*.json" | head -5

    - name: 📅 Generate timestamp
      id: timestamp
      run: echo "date=$(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT

    - name: 📊 Extract test summary
      id: test_summary
      run: |
        # Buscar en el reporte HTML o JSON (si activaste JSON reporter)
        passed=$(grep -oP '(?<=<span class="passed">)[0-9]+' playwright-report/index.html | head -1 || echo "0")
        failed=$(grep -oP '(?<=<span class="failed">)[0-9]+' playwright-report/index.html | head -1 || echo "0")
        skipped=$(grep -oP '(?<=<span class="skipped">)[0-9]+' playwright-report/index.html | head -1 || echo "0")
        echo "passed=$passed" >> $GITHUB_OUTPUT
        echo "failed=$failed" >> $GITHUB_OUTPUT
        echo "skipped=$skipped" >> $GITHUB_OUTPUT
        echo "📊 Test Summary: Passed=$passed, Failed=$failed, Skipped=$skipped"

    - name: 🚀 Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./playwright-report
        publish_branch: gh-pages
        force_orphan: true
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        cname: false

    - name: 📤 Upload test results as artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: playwright-report/
        retention-days: 30

    - name: 🔔 Send Slack notification (Intelligent)
      if: always()
      continue-on-error: true
      run: |
        echo "🚀 Enviando notificación Slack..."
        node scripts/intelligent-notifier.js || echo "⚠️ Notificación falló pero continuamos"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
